table <- data.frame(Minimo = quantile(vetor)[1],
Quartil_1 = quantile(vetor)[2],
Media = mean(vetor),
Mediana = quantile(vetor)[3],
Quartil_3 = quantile(vetor)[4],
Maximo = quantile(vetor)[5])
row.names(table) <- NULL
table
}
#-----------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor)),
Variancia = var(vetor),
Desvio_padrao = sd(vetor)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
table
}
#-----------------------------------------------------------------
# Caminho
path <- "./Questionário-MEPC-2021 (respostas) - Respostas ao formulário 1.csv"
##################################################################
##################################################################
# Leitura e tratamento dos dados do questionário
##################################################################
# Caminho
#path <- "./teste.csv"
path <- "./Questionário-MEPC-2021 (respostas) - Respostas ao formulário 1.csv"
##################################################################
# Leitura dados 2021
quest_21 <- read.csv(path, sep = ',', encoding = 'UTF-8', header = T)
# Nome das colunas
names(quest_21) <-
c('data_hora', 'instituicao', 'setor_ufpr', 'atividade_ies',
'area_conhec', 'fim_grad', 'inst_grad', 'programas_grad', 'inicio_msc',
'final_msc', 'inst_msc', 'artigos', 'bolsa', 'materias_est',
'materias_n_est', 'software_sn', 'software_list', 'met_est',
'import_met_est', 'expectativa_pos_pg', 'conhec_trans', 'youtube',
'contat_coord', 'contat_colab', 'ensino_medio1', 'ensino_medio2',
'sexo', 'altura', 'peso', 'nascimento', 'emprego', 'residencia',
'irmaos', 'origem', 'cnh', 'transporte', 'tempo_ies', 'app_transporte',
'pet', 'instrumento', 'redes_sociais', 'atv_fisica_reg', 'atv_fisica_n',
'atv_fisica_qual', 'covid_positivo', 'covid_conhecido',
'covid_gr_risco_me', 'covid_gr_risco_outro', 'covid_vacina',
'medidas_eficazes', 'medidas_seguidas', 'covid_renda', 'covid_estudos',
'covid_aprendizado', 'covid_ere', 'dificuldade_ere', 'covid_conclusao', 'descartada',
'idade_foto', 'kiki_bouba', 'quadrados')
quest_21 <- quest_21[4:nrow(quest_21),]
##################################################################
# Leitura dados 2020
path <- "./resp_mpec2020 - Respostas ao formulário 1.csv"
quest_20 <- read.csv(path, sep = ',', encoding = 'UTF-8')
#quest <- read.csv(path, sep = ',', encoding = 'latin1')
# Excluindo a primeira coluna referente aos carimbos de data e hora do google forms
quest_20 <- quest_20[,-1]
# Classificacao das variaves
# lo/ln - var qualitativa ordinal, nominal
# td - var quantitativa discreta
# Renomeando as colunas
names(quest_20) <-
c(
# questoes academicas
"ln_instituicao", "ln_setorAtuacao", "lo_ativAtuacao",
"ln_setorArea", "tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_expectAposPG", "ln_conhecTransv", "lo_videoTransv",
"ln_turma", "lo_contatoProfDisc", "lo_contatoProfColabDisc",
"ln_medio1", "ln_medio2",
# perfil do aluno
"ln_sexo", "tc_altura", "tc_peso",
"dataNasc", "ln_tipoTrab", "ln_compMoradia",
"td_numIrmao", "ln_origem", "ln_tipoHab",
"ln_tipoTransp", "tc_tempoPUniv", "td_qtddServTransp",
"ln_pet", "ln_instr","ln_rede",
#questoes extra
"tc_idadeProf", "ln_kiki"
)
##################################################################
# Leitura dados 2019
path <- "./resp_2019.csv"
quest_19 <- read.csv(path, sep = ',', encoding = 'UTF-8')
quest_19 <- data.frame(quest_19[,-1], stringsAsFactors = FALSE)
names(quest_19) <- c("lo_ativAtuacao", "ln_setorAtuacao",
"tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_tipoTrab", "ln_sexo", "td_numIrmao",
"ln_origem", "ln_compMoradia", "ln_tipoTransp",
"ln_tipoHab", "tc_tempoPUniv", "tc_altura",
"tc_peso", "ln_pet", "ln_instr", "dataNasc",
"ln_rede", "td_qtddServTransp", "lo_provNetflix",
"ln_arrozNatal", "tc_idadeProf", "ln_expectAposPG",
"ln_conhecTransv", "lo_videoTransv",
"lo_contatoProfDisc", "lo_contatoProfColabDisc")
##################################################################
knitr::opts_chunk$set(echo = TRUE, cache = FALSE)
idade_foto <- subset(quest_21, idade_foto >= 18 & idade_foto <= 60)
pander(tab_classes(idade_foto$idade_foto))
idade_foto$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 19)
)
idade_foto$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 25)
)
idade_foto$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 40)
)
idade_foto$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 36)
)
quest_21$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 36)#,
#rep('C/ barba', 48)
)
library(tidyverse)
library(plyr)
library(pander)
library(ggpubr)
library(splitstackshape, quietly = TRUE)
library(lubridate)
library(GGally)
library(ggmosaic)
## TABELAS
#-----------------------------------------------------------------
### Tabela de frequencia simples não ordenada
freq_n_ord <- function(vetor){
fa <- table(vetor) # frequência absoluta
fr <- prop.table(fa) # frequência relativa
table <- data.frame(Niveis = names(fa),
Frequencia = as.vector(fa),
`Frequencia relativa` = as.vector(fr)) # unindo
table
}
#-----------------------------------------------------------------
### Tabela de frequencia simples ordenada
freq_ord <- function(vetor){
fa <- table(vetor) # frequência absoluta
fr <- prop.table(fa) # frequência relativa
table <- data.frame(Niveis = names(fa),
Frequencia = as.vector(fa),
`Frequencia relativa` = as.vector(fr)) # unindo
table <- arrange(table, desc(table$Frequencia))
table
}
#-----------------------------------------------------------------
### Tabela por classes
tab_classes <- function(vetor){
h <- hist(vetor, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes <- cut(vetor, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
table <- as.data.frame(table(classes)) #gerando tabela com faixas
table$fr <- prop.table(table$Freq)
names(table) <- c('Classes', 'Frequencia', 'Frequencia relativa')
table
}
#-----------------------------------------------------------------
### Medidas de posição
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor)[1],
Quartil_1 = quantile(vetor)[2],
Media = mean(vetor),
Mediana = quantile(vetor)[3],
Quartil_3 = quantile(vetor)[4],
Maximo = quantile(vetor)[5])
row.names(table) <- NULL
table
}
#-----------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor)),
Variancia = var(vetor),
Desvio_padrao = sd(vetor)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
table
}
#-----------------------------------------------------------------
# Caminho
path <- "./Questionário-MEPC-2021 (respostas) - Respostas ao formulário 1.csv"
##################################################################
##################################################################
# Leitura e tratamento dos dados do questionário
##################################################################
# Caminho
#path <- "./teste.csv"
path <- "./Questionário-MEPC-2021 (respostas) - Respostas ao formulário 1.csv"
##################################################################
# Leitura dados 2021
quest_21 <- read.csv(path, sep = ',', encoding = 'UTF-8', header = T)
# Nome das colunas
names(quest_21) <-
c('data_hora', 'instituicao', 'setor_ufpr', 'atividade_ies',
'area_conhec', 'fim_grad', 'inst_grad', 'programas_grad', 'inicio_msc',
'final_msc', 'inst_msc', 'artigos', 'bolsa', 'materias_est',
'materias_n_est', 'software_sn', 'software_list', 'met_est',
'import_met_est', 'expectativa_pos_pg', 'conhec_trans', 'youtube',
'contat_coord', 'contat_colab', 'ensino_medio1', 'ensino_medio2',
'sexo', 'altura', 'peso', 'nascimento', 'emprego', 'residencia',
'irmaos', 'origem', 'cnh', 'transporte', 'tempo_ies', 'app_transporte',
'pet', 'instrumento', 'redes_sociais', 'atv_fisica_reg', 'atv_fisica_n',
'atv_fisica_qual', 'covid_positivo', 'covid_conhecido',
'covid_gr_risco_me', 'covid_gr_risco_outro', 'covid_vacina',
'medidas_eficazes', 'medidas_seguidas', 'covid_renda', 'covid_estudos',
'covid_aprendizado', 'covid_ere', 'dificuldade_ere', 'covid_conclusao', 'descartada',
'idade_foto', 'kiki_bouba', 'quadrados')
quest_21 <- quest_21[4:nrow(quest_21),]
##################################################################
# Leitura dados 2020
path <- "./resp_mpec2020 - Respostas ao formulário 1.csv"
quest_20 <- read.csv(path, sep = ',', encoding = 'UTF-8')
#quest <- read.csv(path, sep = ',', encoding = 'latin1')
# Excluindo a primeira coluna referente aos carimbos de data e hora do google forms
quest_20 <- quest_20[,-1]
# Classificacao das variaves
# lo/ln - var qualitativa ordinal, nominal
# td - var quantitativa discreta
# Renomeando as colunas
names(quest_20) <-
c(
# questoes academicas
"ln_instituicao", "ln_setorAtuacao", "lo_ativAtuacao",
"ln_setorArea", "tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_expectAposPG", "ln_conhecTransv", "lo_videoTransv",
"ln_turma", "lo_contatoProfDisc", "lo_contatoProfColabDisc",
"ln_medio1", "ln_medio2",
# perfil do aluno
"ln_sexo", "tc_altura", "tc_peso",
"dataNasc", "ln_tipoTrab", "ln_compMoradia",
"td_numIrmao", "ln_origem", "ln_tipoHab",
"ln_tipoTransp", "tc_tempoPUniv", "td_qtddServTransp",
"ln_pet", "ln_instr","ln_rede",
#questoes extra
"tc_idadeProf", "ln_kiki"
)
##################################################################
# Leitura dados 2019
path <- "./resp_2019.csv"
quest_19 <- read.csv(path, sep = ',', encoding = 'UTF-8')
quest_19 <- data.frame(quest_19[,-1], stringsAsFactors = FALSE)
names(quest_19) <- c("lo_ativAtuacao", "ln_setorAtuacao",
"tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_tipoTrab", "ln_sexo", "td_numIrmao",
"ln_origem", "ln_compMoradia", "ln_tipoTransp",
"ln_tipoHab", "tc_tempoPUniv", "tc_altura",
"tc_peso", "ln_pet", "ln_instr", "dataNasc",
"ln_rede", "td_qtddServTransp", "lo_provNetflix",
"ln_arrozNatal", "tc_idadeProf", "ln_expectAposPG",
"ln_conhecTransv", "lo_videoTransv",
"lo_contatoProfDisc", "lo_contatoProfColabDisc")
##################################################################
quest_21$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 36)#,
#rep('C/ barba', 48)
)
quest_21$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 37)#,
#rep('C/ barba', 48)
)
idade_foto <- subset(quest_21, idade_foto >= 18 & idade_foto <= 60)
pander(tab_classes(idade_foto$idade_foto))
idade_foto1 <- subset(idade_foto, indica_foto == 'C/ barba')$idade_foto
idade_foto2 <- subset(idade_foto, indica_foto == 'S/ barba')$idade_foto
h <- hist(idade_foto1, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes1 <- cut(idade_foto1, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
classes2 <- cut(idade_foto2, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
table <- as.data.frame(table(classes1)) #gerando tabela com faixas
table$Freq2 <- as.data.frame(table(classes2))$Freq
names(table) <- c('Classes', 'C/ barba', 'S/ barba')
pander(table)
pos <- rbind(posicao(subset(idade_foto, indica_foto == 'C/ barba')$idade_foto),
posicao(subset(idade_foto, indica_foto == 'S/ barba')$idade_foto))
row.names(pos) <- c('C/ barba', 'S/ barba')
pander(pos)
rmarkdown::render_site()
library(tidyverse)
library(plyr)
library(pander)
library(ggpubr)
library(splitstackshape, quietly = TRUE)
library(lubridate)
library(GGally)
library(ggmosaic)
## TABELAS
#-----------------------------------------------------------------
### Tabela de frequencia simples não ordenada
freq_n_ord <- function(vetor){
fa <- table(vetor) # frequência absoluta
fr <- prop.table(fa) # frequência relativa
table <- data.frame(Niveis = names(fa),
Frequencia = as.vector(fa),
`Frequencia relativa` = as.vector(fr)) # unindo
table
}
#-----------------------------------------------------------------
### Tabela de frequencia simples ordenada
freq_ord <- function(vetor){
fa <- table(vetor) # frequência absoluta
fr <- prop.table(fa) # frequência relativa
table <- data.frame(Niveis = names(fa),
Frequencia = as.vector(fa),
`Frequencia relativa` = as.vector(fr)) # unindo
table <- arrange(table, desc(table$Frequencia))
table
}
#-----------------------------------------------------------------
### Tabela por classes
tab_classes <- function(vetor){
h <- hist(vetor, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes <- cut(vetor, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
table <- as.data.frame(table(classes)) #gerando tabela com faixas
table$fr <- prop.table(table$Freq)
names(table) <- c('Classes', 'Frequencia', 'Frequencia relativa')
table
}
#-----------------------------------------------------------------
### Medidas de posição
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor)[1],
Quartil_1 = quantile(vetor)[2],
Media = mean(vetor),
Mediana = quantile(vetor)[3],
Quartil_3 = quantile(vetor)[4],
Maximo = quantile(vetor)[5])
row.names(table) <- NULL
table
}
#-----------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor)),
Variancia = var(vetor),
Desvio_padrao = sd(vetor)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
table
}
#-----------------------------------------------------------------
# Caminho
path <- "./Questionário-MEPC-2021 (respostas) - Respostas ao formulário 1.csv"
##################################################################
##################################################################
# Leitura e tratamento dos dados do questionário
##################################################################
# Caminho
#path <- "./teste.csv"
path <- "./Questionário-MEPC-2021 (respostas) - Respostas ao formulário 1.csv"
##################################################################
# Leitura dados 2021
quest_21 <- read.csv(path, sep = ',', encoding = 'UTF-8', header = T)
# Nome das colunas
names(quest_21) <-
c('data_hora', 'instituicao', 'setor_ufpr', 'atividade_ies',
'area_conhec', 'fim_grad', 'inst_grad', 'programas_grad', 'inicio_msc',
'final_msc', 'inst_msc', 'artigos', 'bolsa', 'materias_est',
'materias_n_est', 'software_sn', 'software_list', 'met_est',
'import_met_est', 'expectativa_pos_pg', 'conhec_trans', 'youtube',
'contat_coord', 'contat_colab', 'ensino_medio1', 'ensino_medio2',
'sexo', 'altura', 'peso', 'nascimento', 'emprego', 'residencia',
'irmaos', 'origem', 'cnh', 'transporte', 'tempo_ies', 'app_transporte',
'pet', 'instrumento', 'redes_sociais', 'atv_fisica_reg', 'atv_fisica_n',
'atv_fisica_qual', 'covid_positivo', 'covid_conhecido',
'covid_gr_risco_me', 'covid_gr_risco_outro', 'covid_vacina',
'medidas_eficazes', 'medidas_seguidas', 'covid_renda', 'covid_estudos',
'covid_aprendizado', 'covid_ere', 'dificuldade_ere', 'covid_conclusao', 'descartada',
'idade_foto', 'kiki_bouba', 'quadrados')
quest_21 <- quest_21[4:nrow(quest_21),]
##################################################################
# Leitura dados 2020
path <- "./resp_mpec2020 - Respostas ao formulário 1.csv"
quest_20 <- read.csv(path, sep = ',', encoding = 'UTF-8')
#quest <- read.csv(path, sep = ',', encoding = 'latin1')
# Excluindo a primeira coluna referente aos carimbos de data e hora do google forms
quest_20 <- quest_20[,-1]
# Classificacao das variaves
# lo/ln - var qualitativa ordinal, nominal
# td - var quantitativa discreta
# Renomeando as colunas
names(quest_20) <-
c(
# questoes academicas
"ln_instituicao", "ln_setorAtuacao", "lo_ativAtuacao",
"ln_setorArea", "tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_expectAposPG", "ln_conhecTransv", "lo_videoTransv",
"ln_turma", "lo_contatoProfDisc", "lo_contatoProfColabDisc",
"ln_medio1", "ln_medio2",
# perfil do aluno
"ln_sexo", "tc_altura", "tc_peso",
"dataNasc", "ln_tipoTrab", "ln_compMoradia",
"td_numIrmao", "ln_origem", "ln_tipoHab",
"ln_tipoTransp", "tc_tempoPUniv", "td_qtddServTransp",
"ln_pet", "ln_instr","ln_rede",
#questoes extra
"tc_idadeProf", "ln_kiki"
)
##################################################################
# Leitura dados 2019
path <- "./resp_2019.csv"
quest_19 <- read.csv(path, sep = ',', encoding = 'UTF-8')
quest_19 <- data.frame(quest_19[,-1], stringsAsFactors = FALSE)
names(quest_19) <- c("lo_ativAtuacao", "ln_setorAtuacao",
"tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_tipoTrab", "ln_sexo", "td_numIrmao",
"ln_origem", "ln_compMoradia", "ln_tipoTransp",
"ln_tipoHab", "tc_tempoPUniv", "tc_altura",
"tc_peso", "ln_pet", "ln_instr", "dataNasc",
"ln_rede", "td_qtddServTransp", "lo_provNetflix",
"ln_arrozNatal", "tc_idadeProf", "ln_expectAposPG",
"ln_conhecTransv", "lo_videoTransv",
"lo_contatoProfDisc", "lo_contatoProfColabDisc")
##################################################################
quest_21$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 37)#,
#rep('C/ barba', 48)
)
quest_21$indica_foto <- c(rep('C/ barba', 50),
rep('S/ barba', 50),
rep('C/ barba', 48),
rep('S/ barba', 46)#,
#rep('C/ barba', 48)
)
idade_foto <- subset(quest_21, idade_foto >= 18 & idade_foto <= 60)
pander(tab_classes(idade_foto$idade_foto))
idade_foto1 <- subset(idade_foto, indica_foto == 'C/ barba')$idade_foto
idade_foto2 <- subset(idade_foto, indica_foto == 'S/ barba')$idade_foto
h <- hist(idade_foto1, plot = FALSE) #histograma
pos <- rbind(posicao(subset(idade_foto, indica_foto == 'C/ barba')$idade_foto),
posicao(subset(idade_foto, indica_foto == 'S/ barba')$idade_foto))
row.names(pos) <- c('C/ barba', 'S/ barba')
pander(pos)
ggplot(idade_foto, aes(x=idade_foto)) +
geom_histogram(col=1,
lwd=1,
breaks = hist(idade_foto$idade_foto, plot = FALSE)$breaks) +
xlab("Idade") +
ylab("Frequência") +
ggtitle("Idade")+
theme_bw() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15)) +facet_wrap(~indica_foto, nrow = 2)
ggplot(data = idade_foto,
mapping = aes(y=idade_foto, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab("") +
ylab("") +
ggtitle("Idade")+
theme_bw() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip() + facet_wrap(~indica_foto, nrow = 2)
rmarkdown::render_site()
