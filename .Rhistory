# questoes academicas
"ln_instituicao", "ln_setorAtuacao", "lo_ativAtuacao",
"ln_setorArea", "tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_expectAposPG", "ln_conhecTransv", "lo_videoTransv",
"ln_turma", "lo_contatoProfDisc", "lo_contatoProfColabDisc",
"ln_medio1", "ln_medio2",
# perfil do aluno
"ln_sexo", "tc_altura", "tc_peso",
"dataNasc", "ln_tipoTrab", "ln_compMoradia",
"td_numIrmao", "ln_origem", "ln_tipoHab",
"ln_tipoTransp", "tc_tempoPUniv", "td_qtddServTransp",
"ln_pet", "ln_instr","ln_rede",
#questoes extra
"tc_idadeProf", "ln_kiki"
)
##################################################################
# Leitura dados 2019
path <- "./resp_2019.csv"
quest_19 <- read.csv(path, sep = ',', encoding = 'UTF-8')
quest_19 <- data.frame(quest_19[,-1], stringsAsFactors = FALSE)
names(quest_19) <- c("lo_ativAtuacao", "ln_setorAtuacao",
"tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_tipoTrab", "ln_sexo", "td_numIrmao",
"ln_origem", "ln_compMoradia", "ln_tipoTransp",
"ln_tipoHab", "tc_tempoPUniv", "tc_altura",
"tc_peso", "ln_pet", "ln_instr", "dataNasc",
"ln_rede", "td_qtddServTransp", "lo_provNetflix",
"ln_arrozNatal", "tc_idadeProf", "ln_expectAposPG",
"ln_conhecTransv", "lo_videoTransv",
"lo_contatoProfDisc", "lo_contatoProfColabDisc")
##################################################################
options(width=80)
DT::datatable(quest_21[1:4,3:ncol(quest_21)], rownames = FALSE)
library(ggplot2)
quest_21$transporte
### 2021
quest_21$transporte <- tolower(iconv(quest_21$transporte,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
classOpcoes <- c("carro/moto proprio",
"transporte publico", "a pe", "bicicleta",
"carona com amigos", "taxi/aplicativo",
"servico fretado de van/onibus")
quest_21$transporte[ !quest_21$transporte %in% classOpcoes ] <- "outro"
quest_21$transporte <- factor(quest_21$transporte,
levels = c("carro/moto proprio",
"transporte publico", "a pe",
"bicicleta",
"carona com amigos", "taxi/aplicativo",
"servico fretado de van/onibus",
"outro"))
quest_20$ln_tipoTransp
### 2020
quest_20$ln_tipoTransp <- tolower(iconv(quest_20$ln_tipoTransp,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
classOpcoes <- c("carro/moto proprio",
"transporte publico", "a pe", "bicicleta",
"carona com amigos", "taxi/aplicativo",
"servico fretado de van/onibus")
quest_20$ln_tipoTransp[ !quest_20$ln_tipoTransp %in% classOpcoes ] <- "outro"
quest_20$ln_tipoTransp <- factor(quest_20$ln_tipoTransp,
levels = c("carro/moto proprio",
"transporte publico", "a pe",
"bicicleta",
"carona com amigos", "taxi/aplicativo",
"servico fretado de van/onibus",
"outro"))
quest_19$ln_tipoTransp
### 2019
quest_19$ln_tipoTransp <- tolower(iconv(quest_19$ln_tipoTransp,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
classOpcoes <- c("carro/moto proprio",
"transporte publico", "a pe", "bicicleta",
"carona com amigos", "taxi/aplicativo",
"servico fretado de van/onibus")
quest_19$ln_tipoTransp[ !quest_19$ln_tipoTransp %in% classOpcoes ] <- "outro"
quest_19$ln_tipoTransp <- factor(quest_19$ln_tipoTransp,
levels = c("carro/moto proprio",
"transporte publico", "a pe",
"bicicleta",
"carona com amigos", "taxi/aplicativo",
"servico fretado de van/onibus",
"outro"))
## Tabelas de frequencia
table1 <- freq_ord(quest_21$transporte)
pander::pander(table1)
table1 <- freq_n_ord(quest_21$transporte)
quest_21$transporte
table1 <- freq_n_ord(quest_21$transporte)
table1$Niveis <- c("Veículo Próprio",
"Transp. Público",
"A pé", "Bicicleta",
"Carona", "Táxi",
"Van/ônibus", "Outro")
ggplot(data = table1, aes(x = reorder(Niveis, Frequencia),
y = Frequencia)) +
geom_bar(stat = 'identity',
col = 1,
lwd = 1) +
ylim(c(0,
(max(table1$Frequencia)+ (max(table1$Frequencia)*0.05))))+
coord_flip() +
geom_text(aes(label = Frequencia),
hjust=-0.5,
color=1,
size=5)+
ylab("") +
xlab("") +
ggtitle("Instituição")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.x=element_blank(),
text = element_text(size=20))
quest_20$ln_tipoTransp
compara$Niveis <- c("Veículo Próprio",
"Transp. Público",
"A pé", "Bicicleta",
"Carona", "Táxi",
"Van/ônibus", "Outro")
compara <- rbind(freq_n_ord(quest_21$transporte),
freq_n_ord(quest_20$ln_tipoTransp),
freq_n_ord(quest_19$ln_tipoTransp))
compara$Niveis <- c("Veículo Próprio",
"Transp. Público",
"A pé", "Bicicleta",
"Carona", "Táxi",
"Van/ônibus", "Outro")
compara$Ano <- c(rep('2021',8), rep('2020',8), rep('2019',8))
compara$Frequencia.relativa <- round(compara$Frequencia.relativa,2)
ggplot(compara,
aes(x=reorder(Niveis, Frequencia.relativa),
y=Frequencia.relativa, fill=Ano)) +
geom_bar(stat = 'identity',
col = 1,
lwd = 1,
position = 'dodge') +
ylim(c(0,
(max(compara$Frequencia.relativa)+ (max(compara$Frequencia.relativa)*0.05))))+
coord_flip() +
geom_text(aes(label = Frequencia.relativa),
hjust=-0.1,
color=1,
size=5,
position=position_dodge(width=0.9),
vjust=0.5)+
ylab("Proporção") +
xlab("") +
ggtitle("Instituição")+
theme_classic() + theme(#legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=20))
quest_21$atv_fisica_reg
## 2021
quest_21$atv_fisica_reg <- tolower(iconv(quest_21$atv_fisica_reg,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
quest_21$atv_fisica_reg <- factor(quest_21$atv_fisica_reg,
levels = tolower(c("sim", "nao")))
table1 <- freq_ord(quest_21$atv_fisica_reg)
pander::pander(table1)
ggplot(data=table1, aes(x=reorder(Niveis, -Frequencia),
y=Frequencia,
fill = Niveis)) +
geom_bar(stat="identity",
col=1,
lwd=1)+
ylim(c(0,
(max(table1$Frequencia)+ (max(table1$Frequencia)*0.2))))+
geom_text(aes(label=Frequencia),
vjust=-1,
color=1,
size=8)+
ylab("Frequência") +
xlab("") +
ggtitle("Atual atividade")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
#axis.text = element_blank(),
legend.title = element_blank(),
text = element_text(size=15))
rmarkdown::render_site()
## TABELAS
#-----------------------------------------------------------------
### Tabela de frequencia simples não ordenada
freq_n_ord <- function(vetor){
fa <- table(vetor) # frequência absoluta
fr <- prop.table(fa) # frequência relativa
table <- data.frame(Niveis = names(fa),
Frequencia = as.vector(fa),
`Frequencia relativa` = as.vector(fr)) # unindo
table
}
#-----------------------------------------------------------------
### Tabela de frequencia simples ordenada
freq_ord <- function(vetor){
fa <- table(vetor) # frequência absoluta
fr <- prop.table(fa) # frequência relativa
table <- data.frame(Niveis = names(fa),
Frequencia = as.vector(fa),
`Frequencia relativa` = as.vector(fr)) # unindo
table <- arrange(table, desc(table$Frequencia))
table
}
#-----------------------------------------------------------------
### Tabela por classes
tab_classes <- function(vetor){
h <- hist(vetor, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes <- cut(vetor, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
table <- as.data.frame(table(classes)) #gerando tabela com faixas
table$fr <- prop.table(table$Freq)
names(table) <- c('Classes', 'Frequencia', 'Frequencia relativa')
table
}
#-----------------------------------------------------------------
### Medidas de posição
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor)[1],
Quartil_1 = quantile(vetor)[2],
Media = mean(vetor),
Mediana = quantile(vetor)[3],
Quartil_3 = quantile(vetor)[4],
Maximo = quantile(vetor)[5])
row.names(table) <- NULL
table
}
#-----------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor)),
Variancia = var(vetor),
Desvio_padrao = sd(vetor),
Coef_variacao = 100*sd(vetor)/mean(vetor))
table
}
#-----------------------------------------------------------------
# Caminho
path <- "./Questionário-MEPC-2021 (respostas) - Respostas ao formulário 1.csv"
##################################################################
##################################################################
# Leitura e tratamento dos dados do questionário
##################################################################
# Caminho
path <- "./Questionário-MEPC-2021 (respostas) - Respostas ao formulário 1.csv"
##################################################################
# Leitura dados 2021
quest_21 <- read.csv(path, sep = ',', encoding = 'UTF-8', header = T)
# Nome das colunas
names(quest_21) <-
c('data_hora', 'email', 'instituicao', 'setor_ufpr', 'atividade_ies',
'area_conhec', 'fim_grad', 'inst_grad', 'programas_grad', 'inicio_msc',
'final_msc', 'inst_msc', 'artigos', 'bolsa', 'materias_est',
'materias_n_est', 'software_sn', 'software_list', 'met_est',
'import_met_est', 'expectativa_pos_pg', 'conhec_trans', 'youtube',
'contat_coord', 'contat_colab', 'ensino_medio1', 'ensino_medio2',
'sexo', 'altura', 'peso', 'nascimento', 'emprego', 'residencia',
'irmaos', 'origem', 'cnh', 'transporte', 'tempo_ies', 'app_transporte',
'pet', 'instrumento', 'redes_sociais', 'atv_fisica_reg', 'atv_fisica_n',
'atv_fisica_qual', 'covid_positivo', 'covid_conhecido',
'covid_gr_risco_me', 'covid_gr_risco_outro', 'covid_vacina',
'medidas_eficazes', 'medidas_seguidas', 'covid_reanda', 'covid_estudos',
'covid_aprendizado', 'covid_ere', 'dificuldade_ere', 'covid_conclusao',
'covid_colapso', 'idade_foto', 'kiki_bouba', 'quadrados')
##################################################################
# Leitura dados 2020
path <- "./resp_mpec2020 - Respostas ao formulário 1.csv"
quest_20 <- read.csv(path, sep = ',', encoding = 'UTF-8')
#quest <- read.csv(path, sep = ',', encoding = 'latin1')
# Excluindo a primeira coluna referente aos carimbos de data e hora do google forms
quest_20 <- quest_20[,-1]
# Classificacao das variaves
# lo/ln - var qualitativa ordinal, nominal
# td - var quantitativa discreta
# Renomeando as colunas
names(quest_20) <-
c(
# questoes academicas
"ln_instituicao", "ln_setorAtuacao", "lo_ativAtuacao",
"ln_setorArea", "tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_expectAposPG", "ln_conhecTransv", "lo_videoTransv",
"ln_turma", "lo_contatoProfDisc", "lo_contatoProfColabDisc",
"ln_medio1", "ln_medio2",
# perfil do aluno
"ln_sexo", "tc_altura", "tc_peso",
"dataNasc", "ln_tipoTrab", "ln_compMoradia",
"td_numIrmao", "ln_origem", "ln_tipoHab",
"ln_tipoTransp", "tc_tempoPUniv", "td_qtddServTransp",
"ln_pet", "ln_instr","ln_rede",
#questoes extra
"tc_idadeProf", "ln_kiki"
)
##################################################################
# Leitura dados 2019
path <- "./resp_2019.csv"
quest_19 <- read.csv(path, sep = ',', encoding = 'UTF-8')
quest_19 <- data.frame(quest_19[,-1], stringsAsFactors = FALSE)
names(quest_19) <- c("lo_ativAtuacao", "ln_setorAtuacao",
"tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_tipoTrab", "ln_sexo", "td_numIrmao",
"ln_origem", "ln_compMoradia", "ln_tipoTransp",
"ln_tipoHab", "tc_tempoPUniv", "tc_altura",
"tc_peso", "ln_pet", "ln_instr", "dataNasc",
"ln_rede", "td_qtddServTransp", "lo_provNetflix",
"ln_arrozNatal", "tc_idadeProf", "ln_expectAposPG",
"ln_conhecTransv", "lo_videoTransv",
"lo_contatoProfDisc", "lo_contatoProfColabDisc")
##################################################################
options(width=80)
DT::datatable(quest_21[1:4,3:ncol(quest_21)], rownames = FALSE)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, cache = FALSE)
quest_21$covid_positivo
## 2021
quest_21$covid_positivo <- tolower(iconv(quest_21$covid_positivo,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
quest_21$covid_positivo <- factor(quest_21$covid_positivo,
levels = tolower(c("sim", "nao")))
table1 <- freq_ord(quest_21$covid_positivo)
pander::pander(table1)
ggplot(data=table1, aes(x=reorder(Niveis, -Frequencia),
y=Frequencia,
fill = Niveis)) +
geom_bar(stat="identity",
col=1,
lwd=1)+
ylim(c(0,
(max(table1$Frequencia)+ (max(table1$Frequencia)*0.2))))+
geom_text(aes(label=Frequencia),
vjust=-1,
color=1,
size=8)+
ylab("Frequência") +
xlab("") +
ggtitle("Atual atividade")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
#axis.text = element_blank(),
legend.title = element_blank(),
text = element_text(size=15))
## 2021
quest_21$covid_conhecido <- tolower(iconv(quest_21$covid_conhecido,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
quest_21$covid_conhecido <- factor(quest_21$covid_conhecido,
levels = tolower(c("sim", "nao")))
table1 <- freq_ord(quest_21$covid_conhecido)
pander::pander(table1)
ggplot(data=table1, aes(x=reorder(Niveis, -Frequencia),
y=Frequencia,
fill = Niveis)) +
geom_bar(stat="identity",
col=1,
lwd=1)+
ylim(c(0,
(max(table1$Frequencia)+ (max(table1$Frequencia)*0.2))))+
geom_text(aes(label=Frequencia),
vjust=-1,
color=1,
size=8)+
ylab("Frequência") +
xlab("") +
ggtitle("Atual atividade")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
#axis.text = element_blank(),
legend.title = element_blank(),
text = element_text(size=15))
## 2021
quest_21$covid_gr_risco_me <- tolower(iconv(quest_21$covid_gr_risco_me,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
quest_21$covid_gr_risco_me <- factor(quest_21$covid_gr_risco_me,
levels = tolower(c("sim", "nao")))
table1 <- freq_ord(quest_21$covid_gr_risco_me)
pander::pander(table1)
ggplot(data=table1, aes(x=reorder(Niveis, -Frequencia),
y=Frequencia,
fill = Niveis)) +
geom_bar(stat="identity",
col=1,
lwd=1)+
ylim(c(0,
(max(table1$Frequencia)+ (max(table1$Frequencia)*0.2))))+
geom_text(aes(label=Frequencia),
vjust=-1,
color=1,
size=8)+
ylab("Frequência") +
xlab("") +
ggtitle("Atual atividade")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
#axis.text = element_blank(),
legend.title = element_blank(),
text = element_text(size=15))
## 2021
quest_21$covid_gr_risco_outro <- tolower(iconv(quest_21$covid_gr_risco_outro,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
quest_21$covid_gr_risco_outro <- factor(quest_21$covid_gr_risco_outro,
levels = tolower(c("sim", "nao")))
table1 <- freq_ord(quest_21$covid_gr_risco_outro)
pander::pander(table1)
ggplot(data=table1, aes(x=reorder(Niveis, -Frequencia),
y=Frequencia,
fill = Niveis)) +
geom_bar(stat="identity",
col=1,
lwd=1)+
ylim(c(0,
(max(table1$Frequencia)+ (max(table1$Frequencia)*0.2))))+
geom_text(aes(label=Frequencia),
vjust=-1,
color=1,
size=8)+
ylab("Frequência") +
xlab("") +
ggtitle("Atual atividade")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
#axis.text = element_blank(),
legend.title = element_blank(),
text = element_text(size=15))
## 2021
quest_21$covid_vacina <- tolower(iconv(quest_21$covid_vacina,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
quest_21$covid_vacina <- factor(quest_21$covid_vacina,
levels = tolower(c("sim", "nao")))
table1 <- freq_ord(quest_21$covid_vacina)
pander::pander(table1)
ggplot(data=table1, aes(x=reorder(Niveis, -Frequencia),
y=Frequencia,
fill = Niveis)) +
geom_bar(stat="identity",
col=1,
lwd=1)+
ylim(c(0,
(max(table1$Frequencia)+ (max(table1$Frequencia)*0.2))))+
geom_text(aes(label=Frequencia),
vjust=-1,
color=1,
size=8)+
ylab("Frequência") +
xlab("") +
ggtitle("Atual atividade")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
#axis.text = element_blank(),
legend.title = element_blank(),
text = element_text(size=15))
rmarkdown::render_site()
